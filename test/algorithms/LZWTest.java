package algorithms;

import algorithms.base.BaseAlgorithmTest;
import java.util.ArrayList;
import java.util.List;
import org.junit.Test;

/**
 * Author: Sergio Vazquez
 *
 * TODO: Fix
 */
public class LZWTest extends BaseAlgorithmTest {

  @Test
  public void testLZW() {
    test(Algorithm.LZW.getAlgorithm());
  }

  @Override
  public List<byte[]> getInputs() {
    return new ArrayList<byte[]>() {
      {
        add("D0N QuÍjoT3 DE LA MaNCh4".getBytes());
        add("abcdefghijklmnopqrstuvwxyz!·$%&/()=?¿^|@#~][{}-.-,:;ªº".getBytes());
        add("a1b2c3d4e5\náàä".getBytes());
        add("áéíóúàèìòùäëïöü".getBytes());
      }
    };
  }

  @Override
  public List<byte[]> getOutputs() {
    return new ArrayList<byte[]>() {
      {
        add(new byte[]{(byte) 0x04, (byte) 0x40, (byte) 0x30, (byte) 0x04, (byte) 0xe0, (byte) 0x20,
            (byte) 0x05, (byte) 0x10, (byte) 0x75, (byte) 0x0c, (byte) 0x30, (byte) 0x8d,
            (byte) 0x06, (byte) 0xa0, (byte) 0x6f, (byte) 0x05, (byte) 0x40, (byte) 0x33,
            (byte) 0x02, (byte) 0x00, (byte) 0x44, (byte) 0x04, (byte) 0x50, (byte) 0x20,
            (byte) 0x04, (byte) 0xc0, (byte) 0x41, (byte) 0x02, (byte) 0x00, (byte) 0x4d,
            (byte) 0x06, (byte) 0x10, (byte) 0x4e, (byte) 0x04, (byte) 0x30, (byte) 0x68,
            (byte) 0x03, (byte) 0x40}
        );
        add(new byte[]{(byte) 0x06, (byte) 0x10, (byte) 0x62, (byte) 0x06, (byte) 0x30, (byte) 0x64,
            (byte) 0x06, (byte) 0x50, (byte) 0x66, (byte) 0x06, (byte) 0x70, (byte) 0x68,
            (byte) 0x06, (byte) 0x90, (byte) 0x6a, (byte) 0x06, (byte) 0xb0, (byte) 0x6c,
            (byte) 0x06, (byte) 0xd0, (byte) 0x6e, (byte) 0x06, (byte) 0xf0, (byte) 0x70,
            (byte) 0x07, (byte) 0x10, (byte) 0x72, (byte) 0x07, (byte) 0x30, (byte) 0x74,
            (byte) 0x07, (byte) 0x50, (byte) 0x76, (byte) 0x07, (byte) 0x70, (byte) 0x78,
            (byte) 0x07, (byte) 0x90, (byte) 0x7a, (byte) 0x02, (byte) 0x10, (byte) 0xc2,
            (byte) 0x0b, (byte) 0x70, (byte) 0x24, (byte) 0x02, (byte) 0x50, (byte) 0x26,
            (byte) 0x02, (byte) 0xf0, (byte) 0x28, (byte) 0x02, (byte) 0x90, (byte) 0x3d,
            (byte) 0x03, (byte) 0xf0, (byte) 0xc2, (byte) 0x0b, (byte) 0xf0, (byte) 0x5e,
            (byte) 0x07, (byte) 0xc0, (byte) 0x40, (byte) 0x02, (byte) 0x30, (byte) 0x7e,
            (byte) 0x05, (byte) 0xd0, (byte) 0x5b, (byte) 0x07, (byte) 0xb0, (byte) 0x7d,
            (byte) 0x02, (byte) 0xd0, (byte) 0x2e, (byte) 0x02, (byte) 0xd0, (byte) 0x2c,
            (byte) 0x03, (byte) 0xa0, (byte) 0x3b, (byte) 0x0c, (byte) 0x20, (byte) 0xaa,
            (byte) 0x0c, (byte) 0x20, (byte) 0xba}
        );
        add(new byte[]{(byte) 0x06, (byte) 0x10, (byte) 0x31, (byte) 0x06, (byte) 0x20, (byte) 0x32,
            (byte) 0x06, (byte) 0x30, (byte) 0x33, (byte) 0x06, (byte) 0x40, (byte) 0x34,
            (byte) 0x06, (byte) 0x50, (byte) 0x35, (byte) 0x00, (byte) 0xa0, (byte) 0xc3,
            (byte) 0x0a, (byte) 0x10, (byte) 0xc3, (byte) 0x0a, (byte) 0x00, (byte) 0xc3,
            (byte) 0x0a, (byte) 0x40}
        );
        add(new byte[]{(byte) 0x0c, (byte) 0x30, (byte) 0xa1, (byte) 0x0c, (byte) 0x30, (byte) 0xa9,
            (byte) 0x0c, (byte) 0x30, (byte) 0xad, (byte) 0x0c, (byte) 0x30, (byte) 0xb3,
            (byte) 0x0c, (byte) 0x30, (byte) 0xba, (byte) 0x0c, (byte) 0x30, (byte) 0xa0,
            (byte) 0x0c, (byte) 0x30, (byte) 0xa8, (byte) 0x0c, (byte) 0x30, (byte) 0xac,
            (byte) 0x0c, (byte) 0x30, (byte) 0xb2, (byte) 0x0c, (byte) 0x30, (byte) 0xb9,
            (byte) 0x0c, (byte) 0x30, (byte) 0xa4, (byte) 0x0c, (byte) 0x30, (byte) 0xab,
            (byte) 0x0c, (byte) 0x30, (byte) 0xaf, (byte) 0x0c, (byte) 0x30, (byte) 0xb6,
            (byte) 0x0c, (byte) 0x30, (byte) 0xbc}
        );
      }
    };
  }
}
